{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Jalves Espetaria",
        "description": "",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "servers": [
        {
            "url": "/",
            "description": "Local Dev, or from Heroku"
        },
        {
            "url": "/api/",
            "description": "With docker-compose and nginx proxy"
        }
    ],
    "tags": [
        {
            "name": "Jalves",
            "description": "API for Jalves Espetaria in the system"
        }
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/sessions": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Create a token in system",
                "requestBody": {
                    "description": "Authentication Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/authenticationRequest"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authentication"
                        }
                    },
                    "400": {
                        "description": "Incorrect email/password combination."
                    }
                }
            }
        },
        "/user/create":{
            "post":{
                "tags": [
                    "User"
                ],
                "summary": "Create a user in system",
                "requestBody": {
                    "description": "User Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/userRequest"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Email address already used."
                    }
                }
            }
        },
        "/user/update/{id}":{
            "put":{
                "summary": "Update User with ID",
                "tags": [
                    "User"
                ],
                "requestBody":{
                    "description": "User Update",
                    "required": true,
                    "content": {
                        "aplication/json": {
                            "schema": {
                                "$ref": "#/definitions/userRequestUpdate"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "User with new values of properties",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Email address already used."
                    },
                    "401": {
                        "description": "You do not permission update this user"
                    }
                }
            }
        },
        "/user/search/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user with given ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "User with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "User do not exist!"
                    }
                }
            }
        },
        "/user/users/search": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get users with name and page",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "User with name",
                        "schema": {
                            "$ref": "#/definitions/name"
                        }
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "User with page",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "User do not exist!"
                    },
                    "401": {
                        "description": "JWT token is missing!"
                    }
                }
            }
        },    
        "/product/create": {
            "post":{
                "tags": [
                    "Product"
                ],
                "summary": "Create a product in system",
                "requestBody": {
                    "description": "Product Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/product"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Email address already used."
                    },
                    "401": {
                        "description": "JWT token is missing!"
                    }
                }
            }
        },
        "/product/update/{id}": {
            "put":{
                "tags": [
                    "Product"
                ],
                "summary": "Update a product in system",
                "requestBody": {
                    "description": "Product Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/product"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Product with new values of properties",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Email address already used."
                    },
                    "401": {
                        "description": "JWT token is missing!"
                    }
                }
            }
        },
        "/product/delete/{id}": {
            "delete":{
                "tags": [
                    "Product"
                ],
                "summary": "Delete a product in system",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Product with new values of properties",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Product do not exist!"
                    },
                    "401": {
                        "description": "JWT token is missing!"
                    }
                }
            }
        },
        "/product/search": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get product with name",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "Product with name",
                        "schema": {
                            "$ref": "#/definitions/name"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "User do not exist!"
                    },
                    "401": {
                        "description": "JWT token is missing!"
                    }
                }
            }
        }    
    },
    "definitions": {
        "id": {
            "properties": {
                "uuid": {
                    "type": "string"
                }
            }
        },
        "name": {
            "type": "string"
        },
        "userRequest":{
            "type": "object",
            "properties": {
                "name": {
                    "type":"string"
                },
                "email":{
                    "type":"string"
                },
                "age": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "user":{
            "type":"object",
            "properties": {
                "name": {
                    "type":"string"
                },
                "email":{
                    "type":"string"
                },
                "age": {
                    "type": "integer"
                },
                "user_id":{
                    "type": "string"
                },
                "created_at":{
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "authenticationRequest":{
            "type":"object",
            "properties": {
                "email":{
                    "type":"string"
                },
                "password":{
                    "type":"string"
                }
            }
        },
        "authentication":{
            "type":"object",
            "properties": {
                "user":{
                    "type":"object",
                    "additionalProperties": {
                        "$ref": "#/definitions/user"
                    }
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "userRequestUpdate": {
            "properties": {
                "name": {
                    "type":"string"
                },
                "email":{
                    "type":"string"
                },
                "age": {
                    "type": "integer"
                }
            }
        },
        "product":{
            "properties": {
                "name": {
                    "type": "string"
                },
                "qty": {
                    "type": "string"
                }
            }
        }
    }
}